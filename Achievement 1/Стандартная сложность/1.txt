.include "m8def.inc"

; Константы
.equ TIMER1_INTERVAL = 500     ; Интервал для таймера 1 (в тактах)
.equ TIMER2_INTERVAL = 1000    ; Интервал для таймера 2 (в тактах)
.equ TIMER1_STR = "ping\r\n"
.equ TIMER2_STR = "pong\r\n"

; Регистры
.def temp = r16
.def counter1 = r17
.def counter2 = r18

; Таблица прерываний
.org 0x0000
rjmp RESET

.org TIMER1_COMPA_vect
rjmp TIMER1_COMPA_ISR

.org TIMER2_COMPA_vect
rjmp TIMER2_COMPA_ISR

RESET:
    ; Инициализация стека
    ldi temp, low(RAMEND)
    out SPL, temp
    ldi temp, high(RAMEND)
    out SPH, temp

    ; Инициализация USART (9600 бит/с, 8 бит данных, 1 стоп-бит)
    ldi temp, (1<<RXEN) | (1<<TXEN)
    out UCSRB, temp
    ldi temp, (1<<UCSZ1) | (1<<UCSZ0)
    out UCSRC, temp
    ldi temp, 103
    out UBRRL, temp

    ; Инициализация таймеров
    ldi temp, (1<<WGM12) | (1<<CS11) | (1<<CS10)
    out TCCR1B, temp
    ldi temp, TIMER1_INTERVAL & 0xFF
    out OCR1A, temp
    ldi temp, (1<<OCIE1A)
    out TIMSK, temp

    ldi temp, (1<<WGM12) | (1<<CS21) | (1<<CS20)
    out TCCR2, temp
    ldi temp, TIMER2_INTERVAL & 0xFF
    out OCR2, temp
    ldi temp, (1<<OCIE2)
    out TIMSK, temp

    ; Глобальное разрешение прерываний
    sei

MAIN_LOOP:
    rjmp MAIN_LOOP

TIMER1_COMPA_ISR:
    ; Вывод строки "ping\r\n" через USART
    ldi counter1, 0
PRINT_TIMER1:
    ld temp, TIMER1_STR + counter1
    cp temp, $0
    breq END_TIMER1_PRINT
    out UDR, temp
    inc counter1
    rjmp PRINT_TIMER1
END_TIMER1_PRINT:
    reti

TIMER2_COMPA_ISR:
    ; Вывод строки "pong\r\n" через USART
    ldi counter2, 0
PRINT_TIMER2:
    ld temp, TIMER2_STR + counter2
    cp temp, $0
    breq END_TIMER2_PRINT
    out UDR, temp
    inc counter2
    rjmp PRINT_TIMER2
END_TIMER2_PRINT:
    reti
